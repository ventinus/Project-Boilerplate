@mixin triangle-up($size, $color) {
  position: absolute;
  width: 0;
  height: 0;
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-bottom: $size solid $color;
}

@mixin triangle-down($size, $color) {
  position: absolute;
  width: 0;
  height: 0;
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-top: $size solid $color;
}

@mixin triangle-right($size, $color) {
  position: absolute;
  width: 0;
  height: 0;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  border-left: $size solid $color;
}

@mixin triangle-left($size, $color) {
  position: absolute;
  width: 0;
  height: 0;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  border-right: $size solid $color;
}

@mixin isVisuallyHidden {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  margin: 0 !important;
  clip: rect(1px 1px 1px 1px) !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  overflow: hidden !important;
}

.isVisuallyHidden {
	@include isVisuallyHidden();
}

@mixin cols($min: 1, $max: 12, $col-gutter: 0px, $row-gutter: 0px, $col-wrapper-name: ".cols", $col-name: ".cols__col", $breakpoint: '') {
  #{$col-wrapper-name} > * {
    margin-top: $row-gutter;
    margin-left: $col-gutter;
    font-size: initial;
    display: inline-block;
    vertical-align: top;
    box-sizing: border-box;
    border: 1px solid #000;
  }

  #{$col-wrapper-name} > #{$col-name} {
    width: calc(100% - #{$col-gutter});
  }

  @for $i from $min through $max {
    @for $j from $i through $max  {
      @if $i != $j {
        #{$col-wrapper-name} > #{$col-name}-#{$i}of#{$j}#{$breakpoint} {
          $col-percent: 100% * $i / $j;
          width: calc(#{$col-percent} - #{$col-gutter});
        }
      }
    }
  }
}
